# Create network for all containers within
docker network create pg-network

# Port from host machine to container
docker run -it \
  -e POSTGRES_USER="root" \
  -e POSTGRES_PASSWORD="root" \
  -e POSTGRES_DB="ny_taxi" \
  -v $(pwd)/ny_taxi_postgres_data:/var/lib/postgresql/data \
  -p 5432:5432 \
  --network=pg-network \
  --name=pg-database \
  postgres:13

# To access database
pgcli -h localhost -p 5432 -u root -d ny_taxi

# Set up pgadmin container
docker run -it \
  -e PGADMIN_DEFAULT_EMAIL="admin@admin.com" \
  -e PGADMIN_DEFAULT_PASSWORD="root" \
  -p 8080:80 \
  --network=pg-network \
  --name=pgadmin \
  dpage/pgadmin4

# To run pipeline script
python3 ingest_data_pipeline.py \
  --user=root \
  --password=root \
  --host=localhost \
  --port=5432 \
  --database=ny_taxi \
  --table_name=yellow_taxi_trips \
  --url="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"

# Build docker image with data ingestion script
docker build -t ingest_data:v01 .
docker run -it \
  --network=pg-network \
  ingest_data:v01 \
    --user=root \
    --password=root \
    --host=pg-database \
    --port=5432 \
    --database=ny_taxi \
    --table_name=yellow_taxi_trips \
    --url="https://d37ci6vzurychx.cloudfront.net/trip-data/yellow_tripdata_2021-01.parquet"

# Build Postgres and pgadmin using docker compose
docker-compose up